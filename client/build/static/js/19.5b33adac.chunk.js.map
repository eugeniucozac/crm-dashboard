{
  "version": 3,
  "sources": [
    "components/Dashboard/ChangePassword/ChangePasswordForm.js",
    "components/Dashboard/ChangePassword/index.js"
  ],
  "names": [
    "PasswordForm",
    "state",
    "password",
    "password2",
    "onChange",
    "e",
    "setState",
    "target",
    "name",
    "value",
    "onSubmit",
    "a",
    "preventDefault",
    "props",
    "changePassword",
    "userId",
    "this",
    "resetErrors",
    "error",
    "success",
    "Form",
    "noValidate",
    "TextField",
    "type",
    "label",
    "placeholder",
    "data",
    "Row",
    "Col",
    "Button",
    "variant",
    "className",
    "Component",
    "connect",
    "changePasswordSuccess",
    "authorizationErrors",
    "selectAuthorizationId",
    "ChangePassword",
    "Sidebar",
    "lg",
    "ChangePasswordForm"
  ],
  "mappings": "uQAQMA,E,4MACJC,MAAQ,CACNC,SAAU,GACVC,UAAW,I,EAObC,SAAW,SAAAC,GACT,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG5CC,S,uCAAW,WAAML,GAAN,yBAAAM,EAAA,6DACTN,EAAEO,iBADO,EAE0B,EAAKC,MAAhCC,EAFC,EAEDA,eAAgBC,EAFf,EAEeA,OAFf,EAGuB,EAAKd,MAA7BC,EAHC,EAGDA,SAAUC,EAHT,EAGSA,UAHT,SAKHW,EAAeC,EAAQ,CAAEb,WAAUC,cALhC,OAMT,EAAKG,SAAS,CAAEJ,SAAU,GAAIC,UAAW,KANhC,2C,2HAPTa,KAAKH,MAAMI,gB,+BAgBH,IAAD,EACyBD,KAAKf,MAA7BC,EADD,EACCA,SAAUC,EADX,EACWA,UADX,EAEoBa,KAAKH,MAAxBK,EAFD,EAECA,MAAOC,EAFR,EAEQA,QAEf,OACE,kBAACC,EAAA,EAAD,CAAMC,YAAU,EAACX,SAAUM,KAAKN,UAC9B,kBAACY,EAAA,EAAD,CACEC,KAAK,WACLf,KAAK,WACLC,MAAOP,EACPsB,MAAM,eACNC,YAAY,eACZrB,SAAUY,KAAKZ,SACfe,QAASA,GAAW,uBACpBD,MAAOA,GAASA,EAAMQ,KAAKxB,WAE7B,kBAACoB,EAAA,EAAD,CACEC,KAAK,WACLf,KAAK,YACLC,MAAON,EACPqB,MAAM,sBACNC,YAAY,sBACZrB,SAAUY,KAAKZ,SACfc,MAAOA,GAASA,EAAMQ,KAAKvB,YAE7B,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAASQ,UAAU,oBAAlD,iB,GAlDeC,aAwEZC,eANS,SAAAhC,GAAK,MAAK,CAChCkB,QAASe,YAAsBjC,GAC/BiB,MAAOiB,YAAoBlC,GAC3Bc,OAAQqB,YAAmBnC,MAGW,CAAEa,mBAAgBG,iBAA3CgB,CAA0DjC,GCjD1DqC,UA1BQ,WACrB,OACE,6BAASN,UAAU,QACjB,kBAACJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACU,EAAA,EAAD,OAEF,kBAACV,EAAA,EAAD,CAAKW,GAAG,KAAKR,UAAU,kBACrB,kBAACJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKW,GAAG,KACN,yBAAKR,UAAU,YACb,yBAAKA,UAAU,mBACb,gDAEF,yBAAKA,UAAU,iBACb,kBAACS,EAAD",
  "file": "static/js/19.5b33adac.chunk.js",
  "sourcesContent": [
    "import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Col, Form, Row, Button } from \"react-bootstrap\"\nimport { changePassword, resetErrors } from \"@actions/authorization\"\nimport { authorizationErrors, selectAuthorizationId, changePasswordSuccess } from \"@selectors/authorization\"\nimport { TextField } from \"@components/shared/Fields/TextField\"\nimport PropTypes from \"prop-types\"\n\nclass PasswordForm extends Component {\n  state = {\n    password: \"\",\n    password2: \"\",\n  }\n\n  componentWillUnmount() {\n    this.props.resetErrors()\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onSubmit = async e => {\n    e.preventDefault()\n    const { changePassword, userId } = this.props\n    const { password, password2 } = this.state\n\n    await changePassword(userId, { password, password2 })\n    this.setState({ password: \"\", password2: \"\" })\n  }\n\n  render() {\n    const { password, password2 } = this.state\n    const { error, success } = this.props\n\n    return (\n      <Form noValidate onSubmit={this.onSubmit}>\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          label=\"New Password\"\n          placeholder=\"New Password\"\n          onChange={this.onChange}\n          success={success && \"Password was changed\"}\n          error={error && error.data.password}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password2\"\n          value={password2}\n          label=\"Repeat New Password\"\n          placeholder=\"Repeat New Password\"\n          onChange={this.onChange}\n          error={error && error.data.password2}\n        />\n        <Row>\n          <Col>\n            <Button variant=\"primary\" type=\"submit\" className=\"w-25 float-right\">\n              Change\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n}\n\nPasswordForm.propTypes = {\n  password: PropTypes.string.isRequired,\n  password2: PropTypes.string.isRequired,\n  changePassword: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  success: changePasswordSuccess(state),\n  error: authorizationErrors(state),\n  userId: selectAuthorizationId(state),\n})\n\nexport default connect(mapStateToProps, { changePassword, resetErrors })(PasswordForm)\n",
    "import React from \"react\"\nimport { Row, Col } from \"react-bootstrap\"\nimport Sidebar from \"@components/Dashboard/Sidebar\"\nimport ChangePasswordForm from \"@components/Dashboard/ChangePassword/ChangePasswordForm\"\n\nconst ChangePassword = () => {\n  return (\n    <section className=\"main\">\n      <Row>\n        <Col>\n          <Sidebar />\n        </Col>\n        <Col lg=\"11\" className=\"container-left\">\n          <Row>\n            <Col lg=\"6\">\n              <div className=\"ms-panel\">\n                <div className=\"ms-panel-header\">\n                  <h6>Change Password</h6>\n                </div>\n                <div className=\"ms-panel-body\">\n                  <ChangePasswordForm />\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </section>\n  )\n}\n\nexport default ChangePassword\n"
  ],
  "sourceRoot": ""
}
