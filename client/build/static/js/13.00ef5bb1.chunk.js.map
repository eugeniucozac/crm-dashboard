{
  "version": 3,
  "sources": [
    "components/shared/ModalDelete.js",
    "components/Dashboard/Project/Projects/Filter.module.css",
    "components/Dashboard/Project/Projects/Filter.js",
    "components/Dashboard/Project/Projects/Table.js",
    "components/Dashboard/Project/Projects/index.js"
  ],
  "names": [
    "ModalDelete",
    "id",
    "hideModal",
    "isModalOpen",
    "deleteState",
    "currentUser",
    "show",
    "onHide",
    "centered",
    "className",
    "variant",
    "onClick",
    "module",
    "exports",
    "Filter",
    "onChange",
    "Row",
    "Form",
    "as",
    "Col",
    "md",
    "styles",
    "column",
    "FormControl",
    "type",
    "name",
    "placeholder",
    "Table",
    "state",
    "toggleModal",
    "setState",
    "this",
    "props",
    "getProjects",
    "projects",
    "loading",
    "Loading",
    "length",
    "striped",
    "bordered",
    "hover",
    "map",
    "createdAt",
    "history",
    "consultant",
    "firstName",
    "lastName",
    "addressBook",
    "addressName",
    "postCode",
    "city",
    "country",
    "key",
    "to",
    "moment",
    "format",
    "status",
    "charAt",
    "Button",
    "removeProject",
    "Component",
    "connect",
    "ownProps",
    "selectProjectsSearch",
    "query",
    "loadingProjects",
    "error",
    "projectsErrors",
    "Projects",
    "currentProject",
    "e",
    "target",
    "value",
    "Sidebar",
    "lg"
  ],
  "mappings": "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",
  "file": "static/js/13.00ef5bb1.chunk.js",
  "sourcesContent": [
    "import React from \"react\"\nimport { Button, Modal, ModalBody } from \"react-bootstrap\"\n\nexport const ModalDelete = ({ id, hideModal, isModalOpen, deleteState, currentUser }) => {\n  return (\n    <Modal show={isModalOpen === id} onHide={hideModal} centered>\n      <ModalBody className=\"swal2-header\">\n        <div className=\"swal2-icon swal2-warning swal2-animate-warning-icon\">\n          <span className=\"swal2-icon-text\">!</span>\n        </div>\n        <h2 className=\"swal2-title\" id=\"swal2-title\">\n          {currentUser === id ? \"You cannot Delete yourself\" : \"Are you sure?\"}\n        </h2>\n        {currentUser !== id && <div id=\"swal2-content\">You won't be able to revert this!</div>}\n        <div className=\"swal2-actions\">\n          {currentUser !== id && (\n            <Button variant=\"primary\" className=\"swal2-confirm swal2-styled\" onClick={deleteState}>\n              Yes, delete it!\n            </Button>\n          )}\n          <Button variant=\"secondary\" className=\"swal2-cancel swal2-styled\" onClick={() => hideModal(null)}>\n            Cancel\n          </Button>\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"Filter_column__16h68\"};",
    "import React from \"react\"\nimport { Row, Col, Form, FormControl } from \"react-bootstrap\"\nimport { FaSearch } from \"react-icons/fa\"\nimport styles from \"./Filter.module.css\"\n\nconst Filter = ({ onChange }) => {\n  return (\n    <Row className=\"justify-content-end\">\n      <Form as={Col} md=\"3\">\n        <div className={styles.column}>\n          <FormControl\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"Find Project By: ID, Address, Post Code, Email\"\n            onChange={onChange}\n          />\n          <FaSearch />\n        </div>\n      </Form>\n    </Row>\n  )\n}\n\nexport default Filter\n",
    "import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { getProjects, removeProject } from \"@actions/project\"\nimport { selectProjects, loadingProjects, projectsErrors, selectProjectsById, selectProjectsSearch } from \"@selectors/project\"\nimport { ModalDelete } from \"@components/shared/ModalDelete\"\nimport { Loading } from \"@components/shared/Loading\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\nimport { Row, Col, Table as BootstrapTable, Button } from \"react-bootstrap\"\n\nclass Table extends Component {\n  state = {\n    isModalOpen: false,\n  }\n\n  componentDidMount() {\n    this.props.getProjects()\n  }\n\n  toggleModal = isModalOpen => {\n    this.setState({ isModalOpen })\n  }\n\n  render() {\n    const { isModalOpen } = this.state\n    const { projects, loading } = this.props\n\n    if (loading) return <Loading />\n    if (!projects.length) return null\n    return (\n      <BootstrapTable striped bordered hover>\n        <thead>\n          <tr>\n            <th>Job ID</th>\n            <th>Job Name</th>\n            <th>Created</th>\n            <th>Job Status</th>\n            <th>Consultant</th>\n            <th>Edit</th>\n            <th>Delete ?</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projects.map(\n            ({\n              id,\n              createdAt,\n              history,\n              consultant: { firstName, lastName },\n              addressBook: { addressName, postCode, city, country },\n            }) => {\n              return (\n                <tr key={id}>\n                  <td>\n                    <Link to={`/dashboard/project/${id}`}> {id}</Link>\n                  </td>\n                  <td>\n                    {addressName},&nbsp;{postCode},&nbsp;\n                    {city},&nbsp;{country}\n                  </td>\n                  <td>{moment(createdAt).format(\"DD-MM-YYYY\")}</td>\n                  <td>{history[0].status.name}</td>\n                  <td>\n                    {firstName.charAt(0)} {lastName.charAt(0)}\n                  </td>\n                  <td>\n                    <Link className=\"btn btn-primary mt-0\" to={`/dashboard/project/${id}/edit`}>\n                      Edit Item\n                    </Link>\n                  </td>\n                  <td>\n                    <Button\n                      id={id}\n                      variant=\"primary\"\n                      onClick={() => {\n                        this.toggleModal(id)\n                      }}\n                    >\n                      Delete Item\n                    </Button>\n                    <ModalDelete\n                      id={id}\n                      hideModal={this.toggleModal}\n                      deleteState={() => removeProject(id)}\n                      isModalOpen={isModalOpen}\n                    />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </BootstrapTable>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: selectProjectsSearch(state, ownProps.query),\n    loading: loadingProjects(state),\n    error: projectsErrors(state),\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getProjects,\n  removeProject,\n})(Table)\n",
    "import React, { Component } from \"react\"\nimport { Row, Col } from \"react-bootstrap\"\nimport Sidebar from \"../../Sidebar\"\nimport Filter from \"./Filter\"\nimport Table from \"./Table\"\n\nclass Projects extends Component {\n  state = {\n    loading: true,\n    currentProject: null,\n    isModalOpen: false,\n    query: \"\",\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render() {\n    const { query } = this.state\n    return (\n      <section className=\"main\">\n        <Row>\n          <Col>\n            <Sidebar />\n          </Col>\n          <Col lg=\"11\" className=\"container-left\">\n            <div className=\"ms-panel\">\n              <div className=\"ms-panel-header\">\n                <h6>Projects</h6>\n              </div>\n              <div className=\"ms-panel-body\">\n                <>\n                  <Filter onChange={this.onChange} />\n                  <Table query={query} />\n                </>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </section>\n    )\n  }\n}\n\nexport default Projects\n"
  ],
  "sourceRoot": ""
}
